# .github/workflows/schoolapi-ci-cd.yml

name: CI/CD SchoolAPI

on:
  pull_request:
    types: [closed]        # Dispara quando um PR é fechado
    branches: [main]       # contra a branch main
    paths:
      - 'SchoolAPI/**'     # somente se houver mudanças em SchoolAPI/

jobs:
  build-and-push:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/apischool:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" \
            | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        working-directory: SchoolAPI
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

  deploy-container:
    needs: build-and-push
    runs-on: [self-hosted, Windows, X64]
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/apischool:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest image & restart container
        shell: pwsh
        run: |
          # Puxa a imagem mais recente
          docker pull $env:IMAGE_NAME

          # Verifica se há um container existente com esse nome
          $existing = docker ps -aq -f name=schoolapi-container
          if ($existing) {
            Write-Host "Stopping and removing existing container..."
            docker stop $existing
            docker rm $existing
          } else {
            Write-Host "No existing 'schoolapi-container' found."
          }

          # Inicia o container com a nova imagem
          Write-Host "Starting new container..."
          docker run -d --name schoolapi-container -p 80:80 $env:IMAGE_NAME
